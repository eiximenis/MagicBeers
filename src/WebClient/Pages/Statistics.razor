@page "/statistics"
@using ApiClients;
@using Components;
@inject IStatisticsClient StatisticsClient;
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor ContextAccessor;

<AuthorizeView>
    <NotAuthorized>
        Go to /login please
    </NotAuthorized>
    <Authorized>
        <div class="container">
            <div class="row">
                <div class="col-md-6 col-sm-12 p-4">
                    <RadzenChart>
                        <RadzenPieSeries Data="@PieEntries" Title="Wins/Loses" CategoryProperty="Result" ValueProperty="Count" />
                    </RadzenChart>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6 col-sm-12 p-4">
                    <h2>Your top 10 carts</h2>
                    <table>
                        <tr>
                            <th>Card</th>
                            <th>Usages</th>
                        </tr>
                        @foreach (var usage in TopCards)
                        {
                            <tr>
                                <td>@CardsLib.CardsRepository.GetCardById(@usage.CardId).Name</td>
                                <td>@usage.Usages</td>
                            </tr>
                        }
                    </table>
                </div>
            </div>
        </div>
    </Authorized>
</AuthorizeView>


@code {

    class PieEntry
    {
        public string Result { get; set; }
        public int Count { get; set; }
    }

    PieEntry[] PieEntries { get; set; }

    IEnumerable<CardUsage> TopCards { get; set; }

    public Statistics()
    {
        PieEntries = new PieEntry[0];
        TopCards = Enumerable.Empty<CardUsage>();
    }


    protected override async Task OnInitializedAsync()
    {
        var ctx = ContextAccessor.HttpContext;
        if (ctx != null && ctx.User.Identity.IsAuthenticated)
        {
            var stats = await StatisticsClient.GetPlayerStats(ctx.User.Identity.Name);
            PieEntries = new PieEntry[]
            {
                new PieEntry() {Count = stats.Loses, Result="Loses"},
                new PieEntry() {Count = stats.Wins, Result="Wins"},
                                    };

            TopCards = await StatisticsClient.GetCardUsages(ctx.User.Identity.Name);

        }

    }
}
